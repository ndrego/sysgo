// Code generated by "stringer -type simInternalEvent"; DO NOT EDIT

package sysgo

import "fmt"

const (
	_simInternalEvent_name_0 = "blockRunblockComplete"
	_simInternalEvent_name_1 = "blockProgress"
	_simInternalEvent_name_2 = "blockWait"
	_simInternalEvent_name_3 = "blockError"
	_simInternalEvent_name_4 = "delayWait"
	_simInternalEvent_name_5 = "updateRegisters"
	_simInternalEvent_name_6 = "registerUpdateComplete"
	_simInternalEvent_name_7 = "propagateWireValues"
	_simInternalEvent_name_8 = "wirePropagateComplete"
	_simInternalEvent_name_9 = "simFinish"
)

var (
	_simInternalEvent_index_0 = [...]uint8{0, 8, 21}
	_simInternalEvent_index_1 = [...]uint8{0, 13}
	_simInternalEvent_index_2 = [...]uint8{0, 9}
	_simInternalEvent_index_3 = [...]uint8{0, 10}
	_simInternalEvent_index_4 = [...]uint8{0, 9}
	_simInternalEvent_index_5 = [...]uint8{0, 15}
	_simInternalEvent_index_6 = [...]uint8{0, 22}
	_simInternalEvent_index_7 = [...]uint8{0, 19}
	_simInternalEvent_index_8 = [...]uint8{0, 21}
	_simInternalEvent_index_9 = [...]uint8{0, 9}
)

func (i simInternalEvent) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _simInternalEvent_name_0[_simInternalEvent_index_0[i]:_simInternalEvent_index_0[i+1]]
	case i == 4:
		return _simInternalEvent_name_1
	case i == 8:
		return _simInternalEvent_name_2
	case i == 16:
		return _simInternalEvent_name_3
	case i == 32:
		return _simInternalEvent_name_4
	case i == 64:
		return _simInternalEvent_name_5
	case i == 128:
		return _simInternalEvent_name_6
	case i == 256:
		return _simInternalEvent_name_7
	case i == 512:
		return _simInternalEvent_name_8
	case i == 1024:
		return _simInternalEvent_name_9
	default:
		return fmt.Sprintf("simInternalEvent(%d)", i)
	}
}
